package com.ecoala.ele.board.web;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.ecoala.ele.board.service.BoardService;
import com.ecoala.ele.board.vo.BoardVO;
import com.ecoala.ele.board.vo.SearchVO;
import com.ecoala.ele.mbrMember.vo.MngMemberVO;

/**
 * Class Name  : BoardController
 * Author      : YoonGaYoung
 * Created Date: 2023. 11. 27.
 * Version: 1.0
 * Purpose:   board 컨트롤러
 * Description: 
 */
@Controller
//@RequestMapping("/board")
public class BoardController {

//	에러 발생시 변화
//	@ExceptionHandler(Exception.class)
//	public String errorView(Exception e) {
//		e.printStackTrace();
//		return "errorView";
//	}
//	

	@Autowired
	BoardService boardService;
	
	
	/*게시판 목록 페이지 이동*/
	@RequestMapping("/boardView")
	public String boardView(Model model, HttpSession session, SearchVO search) {
		System.out.println(search);
		List<BoardVO> boardList = boardService.searchBoardList(search);
		model.addAttribute("boardList", boardList);
		return "user/board/boardView";
	}
	
//	/*목록에서 검색*/
//	@RequestMapping("/searchBoard")
//	public String searchBoard(Model model, SearchVO search) {
//		List<BoardVO> boardList = boardService.searchBoardList(search);
//		model.addAttribute("boardList", boardList);
//		return "user/board/boardView";
//	}
	
	
	/*게시글 상세 조회 페이지 이동*/
	@RequestMapping("/boardDetialView")
	public String boardDetialView(int boardNo, Model model) throws Exception {
		BoardVO boardVO = boardService.getBoard(boardNo);
		if (boardVO != null) {
			boardService.increaseHit(boardNo);
		}
		model.addAttribute("board", boardVO);
		return "user/board/boardDetView";
	}
	
	/*게시글 생성 페이지 이동*/
	@RequestMapping("/boardWriteView")
	public String boardWriteView(HttpSession session) {
		if (session.getAttribute("login") == null) {
			return "redirect:/loginView";
		}
		return "user/board/boardWriteView";
	}
	
	/*게시글 생성 작동*/
	@RequestMapping("/boardWriteDo")
	public String boardWriteView(BoardVO board, HttpSession session) throws Exception {
		MngMemberVO login = (MngMemberVO) session.getAttribute("login");
		board.setUserId(login.getUserId());
		boardService.writeBoard(board);
		return "redirect:/boardView";
	}
	
	/*-------------------------------------------------*/
	
	/*게시글 수정 페이지 이동*/
	@RequestMapping("/boardEditView")
	public String boardEditView(Model model,int boardNo) throws Exception {
	    BoardVO boardVO = boardService.getBoard(boardNo);
	    model.addAttribute("board", boardVO);
		return "user/board/boardEditView";
	}
	
	/*게시글 수정 작동*/
	@PostMapping("/boardEditDo")
	public String boardEditDo(BoardVO board) throws Exception {
		boardService.updateBoard(board);
		return "redirect:/boardView";
	}
	
	/*게시글 삭제 작동*/
	@PostMapping("/boardDel")
	public String boardDel(int boardNo) throws Exception {
		boardService.deleteBoard(boardNo);
		return "redirect:/boardView";
	}

	
}
