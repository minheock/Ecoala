// 전력을 요금으로 계산 함수
function clacETB(electricityConsumption, houseType, month) {
    // 요금 매개변수 정의
    var lowVoltageBasicRates = [910, 1600, 7300];
    var lowVoltageEnergyRates = [120.0, 214.6, 307.3];
    var lowSuperUserRate = 736.2;
    var highVoltageBasicRates = [730, 1260, 6060];
    var highVoltageEnergyRates = [105.0, 174.0, 242.3];
    var highVoltageSuperUserRate = 601.3;

    // 전압 유형에 따라 요금 매개 변수 선택
    var basicRates, energyRates, superUserRate;
    if (houseType == 1 || houseType == 2) {
        basicRates = lowVoltageBasicRates;
        energyRates = lowVoltageEnergyRates;
        superUserRate = (month === '7' || month === '8' || month === '12' || month === '1' || month === '2') ? lowSuperUserRate : 0;
    } else if (houseType == 3) {
        basicRates = highVoltageBasicRates;
        energyRates = highVoltageEnergyRates;
        superUserRate = (month === '7' || month === '8' || month === '12' || month === '1' || month === '2') ? highVoltageSuperUserRate : 0;
    } else {
        alert("1, 2, 3 중 하나의 값이어야 합니다.");
        throw new Error("1, 2, 3 중 하나의 값이어야 합니다.");

    }

    // 전력량 요금 계산
    var basicCharge, energyCharge;
    if (month === '7' || month === '8') {
        if (electricityConsumption <= 300) {
            basicCharge = basicRates[0];
            energyCharge = electricityConsumption * energyRates[0];
        } else if (electricityConsumption <= 450) {
            basicCharge = basicRates[1];
            energyCharge = 300 * energyRates[0] + (electricityConsumption - 300) * energyRates[1];
        } else if (electricityConsumption <= 1000) {
            basicCharge = basicRates[2];
            energyCharge = 300 * energyRates[0] + 150 * energyRates[1] + (electricityConsumption - 450) * energyRates[2];
        } else {
            basicCharge = basicRates[2];
            energyCharge = 300 * energyRates[0] + 150 * energyRates[1] + 550 * energyRates[2] + (electricityConsumption - 1000) * superUserRate;
        }
    } else if (month === '12' || month === '1' || month === '2') {
        if (electricityConsumption <= 200) {
            basicCharge = basicRates[0];
            energyCharge = electricityConsumption * energyRates[0];
        } else if (electricityConsumption <= 400) {
            basicCharge = basicRates[1];
            energyCharge = 200 * energyRates[0] + (electricityConsumption - 200) * energyRates[1];
        } else if (electricityConsumption <= 1000) {
            basicCharge = basicRates[2];
            energyCharge = 200 * energyRates[0] + 200 * energyRates[1] + (electricityConsumption - 400) * energyRates[2];
        } else {
            basicCharge = basicRates[2];
            energyCharge = 200 * energyRates[0] + 200 * energyRates[1] + 600 * energyRates[2] + (electricityConsumption - 1000) * superUserRate;
        }
    } else if (month === '3' || month === '4' || month === '5' || month === '6' || month === '9' || month === '10' || month === '11') {
        if (electricityConsumption <= 200) {
            basicCharge = basicRates[0];
            energyCharge = electricityConsumption * energyRates[0];
        } else if (electricityConsumption <= 400) {
            basicCharge = basicRates[1];
            energyCharge = 200 * energyRates[0] + (electricityConsumption - 200) * energyRates[1];
        } else if (electricityConsumption > 400) {
            basicCharge = basicRates[2];
            energyCharge = 200 * energyRates[0] + 200 * energyRates[1] + (electricityConsumption - 400) * energyRates[2];
        }
    } else {
        alert("월 정보를 확인해주세요.");
        throw new Error("월 정보를 확인해주세요.");
    }

    // 기타 요금 계산
    var beEnvironFee = electricityConsumption * 9.00;
    var environFee = Math.floor(beEnvironFee);
    var beFuelCost = electricityConsumption * 5.00;
    var fuelCost = Math.floor(beFuelCost);

    // 전기요금 계산
    var eleCost = basicCharge + energyCharge + environFee + fuelCost;

    // 부가가치세 계산
    var vat = Math.round(eleCost * 0.1);

    // 전력산업기반기금 계산
    var powerIndustryFund = Math.round(eleCost * 0.037);
    powerIndustryFund = Math.floor(powerIndustryFund / 10) * 10;

    // 청구금액 계산
    var resultBill = Math.floor((eleCost + vat + powerIndustryFund) / 10) * 10;

    // return totalBill;
    // 결과 출력
    console.log(resultBill);
    // console.log(electricityConsumption, houseType, month);
    return resultBill;
}

// 요금을 전력으로 계산 함수 
function clacBTE(targetBill, houseType, month) {

    // 목표 금액에서 부가가치세와 전력산업기반기금을 제외한 순수 전기 사용 요금 추정
    var netElectricityBill = targetBill / 1.147; // 대략적인 역산 공식

    // 전력 소비량 추정을 위한 변수 초기화
    var resultEle = 0;
    var closestBillDifference = Infinity;

    // 각 요금 구간에 대해 전력 소비량 추정
    for (var consumption = 0; consumption <= 50000; consumption += 10) { // 예시로 2000까지, 10단위로 증가
        var calculatedBill = clacETB(consumption, houseType, month);

        var billDifference = Math.abs(calculatedBill - netElectricityBill);
        if (billDifference < closestBillDifference) {
            closestBillDifference = billDifference;
            resultEle = consumption;
        }
    }
    // $("#resultEle").text(resultEle);
    // console.log(targetBill, houseType, month);

    resultEle = resultEle + resultEle * 0.08

    return resultEle;
}


// jQuery 문서가 완전히 로드된 후 실행되는 함수
$(document).ready(function () {
	// 월이나 일이 한 자리 숫자일 경우 앞에 0을 추가하는 함수
	function addZero(number) {
	    return number < 10 ? '0' + number : number;
	}
	
    // 이번 달의 마지막 날짜를 구하기
    var currentDate = new Date();
    var formattedDate = currentDate.getFullYear() + '-' + addZero(currentDate.getMonth() + 1) + '-' + addZero(currentDate.getDate());
    $("#printToday").html(formattedDate)
    var lastDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate();
    var today = currentDate.getDate();
    // 남은 일 수 계산
    // $("#d-dueDate").text("요금 납부까지 " + remainingDays + "일 남았습니다.");
    var remainingDays = lastDayOfMonth - today;
    var remDays = "<span>요금 납부까지 <strong class='remDays' >" + remainingDays + '일 </strong>' + '남았습니다.</span>';
    $("#d-dueDate").html(remDays)
    
    // '계산' 버튼 클릭 시 실행되는 함수
    $("#btnBTE").click(function () {
        // 사용자의 목표 요금 입력 가져오기
        var billBTE = $("#eleBTE-input").val();
        // DB 사용자의 집유형 / 계산할 달 정보 가져오기----------------------------------
        var htBTE = $("#htBTE").val();
        var mthBTE = $("#mthBTE").val();
        var dbSumEle = $("#dbEleInput").val();
        console.log('버튼 누름');
        console.log('billBTE' + billBTE);
        console.log('htBTE' + htBTE);
        console.log('mthBTE' + mthBTE);
        console.log('dbSumEle' + dbSumEle);

        var resultEle = clacBTE(billBTE, htBTE, mthBTE);
        console.log('resultEle' + resultEle);
        $("#resultEle").text(resultEle + "kWh 사용가능");

        // 프로그레스 바의 요소를 가져오기
        const progressBar = document.getElementById('progress-bar');
        // 잔량 출력
        const eleRemain = document.getElementById('eleRemain');
        // 프로그레스 바 업데이트
        const percentage = (dbSumEle / resultEle) * 100;
        progressBar.style.width = `${percentage}%`;
        progressBar.setAttribute('aria-valuenow', dbSumEle);
        progressBar.innerText = `${percentage.toFixed(2)}%`;

        // 초과할 경우 클래스 추가
        if (dbSumEle == resultEle) {
            progressBar.classList.remove('bg-danger', 'bg-info');
            progressBar.classList.add('bg-warning');
            var oneEle = "모두 사용했습니다."
            // $("#eleRemain").text(oneEle);
            // $("#elePerDay").html(oneEle);
            $("#eleRemain").text("모두 사용했습니다.");
            $("#elePerDay").text("모두 사용했습니다.");
            
        } else if (dbSumEle > resultEle) {
            progressBar.classList.remove('bg-info', 'bg-warning');
            progressBar.classList.add('bg-danger');
            progressBar.style.width = '100%'; // Set width to 100%
            var pl_eleRemain = dbSumEle - resultEle
            var remELE = "<span><strong class='remELE' >" + pl_eleRemain + 'kWh </strong>' + '만큼 초과했습니다.</span>';
            // 이전 텍스트를 남기고 싶으면
            // $("#eleRemain").append(test);
            // 지금 내용만 나오게 하려면
            $("#eleRemain").html(remELE);
            var oneEle = "초과했습니다."
            $("#elePerDay").html(oneEle);
        } else {
            progressBar.classList.remove('bg-danger', 'bg-warning');
            progressBar.classList.add('bg-info');
            console.log('잔량:', resultEle - dbSumEle);
            var mn_eleRemain = resultEle - dbSumEle
            var remELE = "<span><strong class='remELE' >" + mn_eleRemain + 'kWh </strong>' + '만큼 남았습니다.</span>';
            $("#eleRemain").html(remELE)

            var oneDayEle = (mn_eleRemain / remainingDays).toFixed(2);
            console.log("mn_eleRemain / remainingDays" + mn_eleRemain +','+ remainingDays);
            console.log('mn_eleRemain / remainingDays =' + oneDayEle);
            var oneEle = "<span>하루에 평균 <strong class='oneDayEle'>" + oneDayEle +"kWh"+"</strong>" + " 사용 할 수 있습니다.</span>"
            $("#elePerDay").html(oneEle)
        }

        // remainingDays elePerDay 하루에 평균 11 kWh 사용 할 수 있습니다.


    });




});